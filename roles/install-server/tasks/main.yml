---
- name: Configure proper network
  hostname: name={{ ansible_hostname }}

- name: Install private keys
  copy: src=ssh/id_rsa
        dest=/root/.ssh/id_rsa
        mode=600

- name: Install public keys
  copy: src=ssh/id_rsa.pub
        dest=/root/.ssh/id_rsa.pub

- name: Add authorized_keys
  authorized_key: user=root
                  key="{{ item }}"
  with_file:
    - ssh/id_rsa.pub

- name: Remove rhel-source
  command: rm -f /etc/yum.repos.d/rhel-source.repo

- name: create hosts file
  copy: src=hosts
        dest=/etc/hosts

- name: Retrieve public repositories (eNovance)
  git:  repo=https://github.com/enovance/{{ item }}.git
        dest=/tmp/{{ item }}
  with_items:
    - openstack-yaml-infra
    - puppet-openstack-cloud
    - openstack-serverspec
    - config-tools 

- name: Install autojenkins pip
  pip: name=autojenkins

- name: Retrieve JJB jobs
  git:  repo=https://github.com/enovance/{{ item }}.git
        dest=/etc/jenkins_jobs
  with_items:
    - jjb-openstack

- name: Retrieve custom repositories (Spredzy)
  git:  repo=https://github.com/Spredzy/{{ item }}.git
        dest=/tmp/{{ item }}
  with_items:
    - spinalstack-env

# Scipts
- name: Copy the scripts file
  command: cp /tmp/config-tools/{{ item }} /usr/bin/
  with_items:
    - configure.sh
    - verify-servers.sh
    - generate.py
    - extract.py
    - merge.py
    - health-check.sh

# tempest  Scipts
- name: Copy the tempest scripts file
  command: cp  -Rv /tmp/config-tools/tempest/  /opt/tempest-scripts/

- name: Setup openrc.sh
  copy: src=openrc.sh dest=/etc/config-tools/

- name: Create necessary folder
  command: mkdir -p {{ item }}
  with_items:
    - /etc/config-tools

- name: Copy the scripts file
  command: cp /tmp/config-tools/{{ item }} /etc/config-tools/
  with_items:
    - config.tmpl

- name: Create the jenkins jobs
  shell: jenkins-jobs update --delete-old /etc/jenkins_jobs/jobs

- name: Create necessary folder
  command: bash -c "merge.py /tmp/openstack-yaml-infra/scenarios/3nodes/infra.yaml /tmp/spinalstack-env/3nodes.yaml > /etc/config-tools/global.yml"

- name: Create necessary folder
  command: bash -c "generate.py 0 /etc/config-tools/global.yml /tmp/config-tools/config.tmpl > /etc/config-tools/config"

# ServerSpec
- name: Create the serverspec files
  command: cp -r /tmp/openstack-serverspec/ /etc/serverspec

- name: Create the serverspec arch.yml.tpml file
  command: cp /tmp/openstack-yaml-infra/arch.yml.tmpl /etc/serverspec/

# Puppet
- name: Create puppet necessary folders
  command: mkdir -p /etc/puppet/{{ item }}
  with_items:
    - manifests
    - data
    - modules

- name: put the configuration files on the right place
  command: cp /tmp/openstack-yaml-infra/data/{{ item }} /etc/puppet/data/{{ item }}
  with_items:
    - common.yaml.tmpl
    - fqdn.yaml.tmpl
    - type.yaml.tmpl

- name: Get the module from the Puppetfile
  command: r10k --verbose 3 puppetfile install
  environment:
    PUPPETFILE: /tmp/puppet-openstack-cloud/Puppetfile
    PUPPETFILE_DIR: /etc/puppet/modules

- name: Create the site.pp
  copy: content="Exec {\n
   path => '/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin'\n
   }\n
   hiera_include('classes')\n
   "
    dest=/etc/puppet/manifests/site.pp

- name: Enable launch-job script
  copy: src=launch-job.py
        dest=/bin/launch-job.py
        mode=0755

#- name: Launch CI jobs
#  shell: launch-job.py http://installserver.example.com:8282/ puppet
